name: 3x-ui-Docker
on:
  repository_dispatch:
  workflow_dispatch:

env:
  repo_url: https://github.com/MHSanaei/3x-ui.git
  docker-repo: 'bfmen/3x-ui'
  platforms: 'linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64'
  configure-sh: './bin/3x-ui/configure.sh'

jobs:  
  build:  
    runs-on: ubuntu-latest
        
    steps:  
      - name: 'Checking'
        uses: actions/checkout@v4

      - name: Init Env
        run: |
          sudo timedatectl set-timezone Asia/Shanghai
          sudo apt-get install tree
          sudo mkdir -p ./workdir
          sudo chown $USER:$GROUPS ./workdir
          echo "======== üöÄDirectory structure ========"
          tree -L 3

      - name: Clone Repo
        run: |
          git clone ${{ env.repo_url }} ./workdir
      
      - name: Repo Tag
        working-directory: ./workdir
        id: tag
        run: |
          echo "repo_tag=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_OUTPUT
          echo "release_tag=$(date +"%Y.%m.%d-%H%M%S")" >> $GITHUB_OUTPUT

      - name: Modify Dockerfile
        run: |
          [ -e ${{ env.configure-sh }} ] && mv ${{ env.configure-sh }} ./workdir/
          cd ./workdir/
          tree -L 2
          chmod +x ./configure.sh && ./configure.sh
          echo "======== üöÄDockerfile Info ========"
          cat ./Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker
        id: docker
        uses: docker/build-push-action@v6
        with:
          context: ./workdir
          push: true
          platforms: ${{ env.platforms }}
          tags: | 
            ${{ env.docker-repo }}:latest
            ${{ env.docker-repo }}:${{ steps.tag.outputs.repo_tag }}
      
      - name: Image digest
        run: echo ${{ steps.docker.outputs.digest }}

      - name: Docker pull to save
        run: |
          docker pull --platform linux/amd64 ${{ env.docker-repo }}:latest
          docker save -o 3x-ui-amd64-${{ steps.tag.outputs.repo_tag }}.tar ${{ env.docker-repo }}:latest
          docker rmi ${{ env.docker-repo }}:latest
          docker pull --platform linux/arm64 ${{ env.docker-repo }}:latest
          docker save -o 3x-ui-arm64-${{ steps.tag.outputs.repo_tag }}.tar ${{ env.docker-repo }}:latest      

      - name: Create Release
        id: release
        uses: softprops/action-gh-release@v2
        if: success() && !cancelled()
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          name: ${{ github.workflow }} - ${{ steps.tag.outputs.repo_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          body: | 
            Release Note:
            - ![](https://img.shields.io/docker/pulls/bfmen/3x-ui.svg?style=flat-square)
            - [ DockerHubüê¨ ](https://hub.docker.com/r/${{ env.docker-repo }})
            - üéØUse: `docker pull bfmen/3x-ui:latest`
            - üëáOr download the Docker image and import it manually
          files: | 
            ${{ steps.docker.outputs.metadata }}
            3x-ui-amd64-${{ steps.tag.outputs.repo_tag }}.tar
            3x-ui-arm64-${{ steps.tag.outputs.repo_tag }}.tar
